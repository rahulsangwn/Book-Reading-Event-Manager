@model Project.BLL.UserModel.EventEntity

@{
    ViewBag.Title = "Create";
}

<h2>Create Event</h2>
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <div class="col-sm-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="custom-control custom-radio">

                            <div class="custom-control custom-radio">
                                <input type="radio" id="Public" name="Type" value="Public" class="custom-control-input" checked="checked">
                                <label class="custom-control-label" for="Public">Public</label>
                            </div>
                            <div class="custom-control custom-radio">
                                <input type="radio" id="Private" name="Type" class="custom-control-input" value="Private">
                                <label class="custom-control-label" for="Private">Private</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-8">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Date, new { type = "date", htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            
        </div>

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label" })
                <div class="form-group row">
                    <div class="col-6">
                        @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Hours,
                            Enumerable.Range(00, 24).Select(i => new SelectListItem
                            { Value = i.ToString(), Text = i.ToString() }), new {@class = "form-control" })
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(model => model.Mins, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Mins,
                            Enumerable.Range(00, 60).Select(i => new SelectListItem
                            { Value = i.ToString(), Text = i.ToString() }), new { @class = "form-control" }                )
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group">
                <label for="exampleTextarea">Others</label>
                <div class="">
                    <textarea class="form-control" id="Others" name="Others" rows="4"></textarea>
                    @Html.ValidationMessageFor(model => model.Others, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="">
                <div class="input-group">
                    @Html.EditorFor(model => model.InviteList, new { htmlAttributes = new { @class = "form-control", @placeholder = "Invite Users" } })
                    @*<input type="text" class="form-control" name="" placeholder="Invite User/s" aria-label="Recipient's username" aria-describedby="basic-addon2">*@
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit" style="margin-left: 15px;">Create</button>
                    </div>
                </div>
            </div>


            @if ((string)TempData["created"] == "true")
            {
                <br />
                <div class="alert alert-dismissible alert-success">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4 class="alert-heading">Created!</h4>
                    <p class="mb-0">Event Successfully created, Thank You. <a href="@Url.Action("MyEvents", "Event")" class="alert-link">Go back to My Events..</a>.</p>
                </div>
            }

            @if ((string)TempData["invited"] == "true")
            {
                <br />
                <div class="alert alert-dismissible alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4 class="alert-heading">Invited!</h4>
                    <p class="mb-0">Users Successfully Invited, Thank You. <a href="@Url.Action("MyEvents", "Event")" class="alert-link">Go back to My Events..</a>.</p>
                </div>
            }

            @if ((string)TempData["invited"] == "false")
            {
                <br />
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <h4 class="alert-heading">Invalid Invitation!</h4>
                    <p class="mb-0">Unable to create Invitation, Thank You. <a href="@Url.Action("Details", "Home", new { Id = Model.EventId })" class="alert-link">Go to Details to invite..</a>.</p>
                </div>
            }
        </div>
    </div>
    
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
