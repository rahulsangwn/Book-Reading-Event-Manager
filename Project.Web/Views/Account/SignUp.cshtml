@model Project.BLL.UserModel.UserEntity

@{
    ViewBag.Title = "Sign Up";
}

<h2>SignUp</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="row">
        <div class="col-sm-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger is-invalid" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger is-invalid" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="SignUp" class="btn btn-outline-primary" />
                    @Html.ActionLink("Already Have Account?", "Login", "Account", new { }, new { @class = "btn btn-primary my-2 my-sm-0" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            @if ((string)TempData["already"] == "true")
            {
                <br />
                <br />
                <div class="alert alert-dismissible alert-success">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Already Registered!</strong> You can not register again. <a href="@Url.Action("Login", "Account")" class="alert-link">Click Here to Login..</a>.
                </div>
            }

        </div>
        
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
